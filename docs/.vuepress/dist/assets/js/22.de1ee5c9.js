(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{437:function(t,e,s){t.exports=s.p+"assets/img/h1.6c49b8e2.jpeg"},530:function(t,e,s){"use strict";s.r(e);var i=s(26),l=Object(i.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h2",{attrs:{id:"定义"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),i("ol",[i("li",[t._v("MVVM 是一种客户端的架构模式。")]),t._v(" "),i("li",[t._v("MVVM 是 Model-View-ViewModel 的简写。")]),t._v(" "),i("li",[t._v("本质上是 MVC 的改进版。")]),t._v(" "),i("li",[t._v("核心内容是，数据和视图分离、数据绑定 和 视图更新。")]),t._v(" "),i("li",[t._v("底层的技术支撑是，事件循环机制、diff 算法。")])]),t._v(" "),i("h2",{attrs:{id:"结构"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#结构"}},[t._v("#")]),t._v(" 结构")]),t._v(" "),i("img",{staticStyle:{display:"block"},attrs:{src:s(437),width:"600"}}),t._v(" "),i("ol",{attrs:{start:"2"}},[i("li",[t._v("Model，即数据仓库，在vue中对应data。")]),t._v(" "),i("li",[t._v("View，即页面视图，在vue中对应Dom。")]),t._v(" "),i("li",[t._v("View Model，即视图模型，它基于js事件的机制，通过数据绑定 和 事件监听的方式，连接了 model 和 view 层，使二者形成了一种双向绑定的关系。当在视图中触发事件时能够自动更新数据；当数据发生改变时，能够自动更新视图。")])])])}),[],!1,null,null,null);e.default=l.exports}}]);