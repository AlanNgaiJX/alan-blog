(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{472:function(s,t,a){"use strict";a.r(t);var n=a(26),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"white-space-控制换行-和-空白处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#white-space-控制换行-和-空白处理"}},[s._v("#")]),s._v(" white-space 控制换行 和 空白处理")]),s._v(" "),a("p",[s._v("前置知识：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("能影响换行的因素，文本语义（单词，中文字）、enter换行（不一定能控制换行）、br标签(一定能控制换行)")])]),s._v(" "),a("li",[a("p",[s._v("所谓的空白处理，是指多个连续空白符是否会被合并只表现为一个空白符。")])])]),s._v(" "),a("ol",[a("li",[s._v("normal 默认。根据文本语义换行，忽略enter换行。合并空白符。")]),s._v(" "),a("li",[s._v("nowrap 忽略语义换行，忽略enter换行。合并空白符。")]),s._v(" "),a("li",[s._v("pre    忽略语义换行，enter可以换行。不合并空白符。")]),s._v(" "),a("li",[s._v("pre-line 根据语义换行，也能用enter换行。合并空白符。")]),s._v(" "),a("li",[s._v("pre-wrap 根据语义换行，也能用enter换行。不合并空白符。")])]),s._v(" "),a("ul",[a("li",[s._v("white-space会影响以下两个（子）属性的功能。")])]),s._v(" "),a("h2",{attrs:{id:"word-break-语义控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#word-break-语义控制"}},[s._v("#")]),s._v(" word-break 语义控制")]),s._v(" "),a("ol",[a("li",[s._v("normal")]),s._v(" "),a("li",[s._v("break-all 允许在英文单词中间断行")]),s._v(" "),a("li",[s._v("keep-all  不允许在英文单词中间断行，根据文本语义断行")])]),s._v(" "),a("h2",{attrs:{id:"word-wrap-overflow-wrap-语义控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#word-wrap-overflow-wrap-语义控制"}},[s._v("#")]),s._v(" word-wrap（overflow-wrap）  语义控制")]),s._v(" "),a("ol",[a("li",[s._v("normal")]),s._v(" "),a("li",[s._v("break-word 这行实在没找到换行点时，才在单词中间换行")])]),s._v(" "),a("p",[s._v("总结：")]),s._v(" "),a("ol",[a("li",[s._v("word-break:break-all正如其名字，所有的都换行。毫不留情，一点空隙都不放过。")]),s._v(" "),a("li",[s._v("word-wrap:break-word则带有怜悯之心，如果这一行文字有可以换行的点，如空格，或中文，则就不打英文单词或字符的主意了，让这些换行点换行，至于对不对齐，好不好看，则不关心")])]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[s._v(" \n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*单行超出省略*/")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".single-Line-Ellipsis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("white-space")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nowrap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("text-overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ellipsis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n          \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 强制不换行 */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".nowrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("white-space")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("nowrap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 允许单词内断句，首先会尝试挪到下一行，看看下一行的宽度够不够，不够的话就进行单词内的断句 */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".breakword")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("word-wrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" break-word"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 断句时，不会把长单词挪到下一行，而是直接进行单词内的断句 */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".breakAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("word-break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("break-all"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("            \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* 超出部分显示省略号 */")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[s._v(".ellipsis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("text-overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("ellipsis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("h2",{attrs:{id:"实用案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实用案例"}},[s._v("#")]),s._v(" 实用案例")]),s._v(" "),a("h3",{attrs:{id:"超过两行后省略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#超过两行后省略"}},[s._v("#")]),s._v(" 超过两行后省略")]),s._v(" "),a("p",[s._v("display: inline-block;\nfont-size: 25rpx;\nline-height: 35rpx;\noverflow: hidden;\ntext-overflow: ellipsis;\ndisplay: -webkit-box;\n-webkit-box-orient: vertical;\n-webkit-line-clamp: 2;// 控制行数")]),s._v(" "),a("h3",{attrs:{id:"超过父元素宽度自动换行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#超过父元素宽度自动换行"}},[s._v("#")]),s._v(" 超过父元素宽度自动换行")]),s._v(" "),a("p",[s._v("word-wrap: break-word;\nword-break: break-all;")])])}),[],!1,null,null,null);t.default=e.exports}}]);